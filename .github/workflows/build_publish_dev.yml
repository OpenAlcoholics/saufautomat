name: Build/Publish docker image

on:
  push:
    branches:
      - '*'
      - '**'
      - '*/*'
      - '!master'

jobs:
  build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: "Build bundle.js"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.1.x"
      - run: sed -i -e "s#{{TAG}}#$(echo ${GITHUB_SHA})#g" src/App.fs
      - run: sed -i -e "s# {{TAG-CLASS}}##g" src/App.fs
      - run: sed -i -e 's#\s*<link rel="stylesheet" href="bootstrap.css" />##g' public/index.html
      - run: sed -i -e 's#\s*<link rel="stylesheet" href="main.css" />##g' public/index.html
      - run: npm install
      - run: dotnet tool restore
      - run: dotnet fable src --run webpack
      - uses: actions/upload-artifact@v1
        with:
          name: public
          path: public/
  build_push_docker:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Login to dockerhub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u torbencarstens --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
      - uses: actions/download-artifact@v1
        with:
          name: public
      - name: Build the tagged Docker image
        run: docker build -t openalcoholics/saufautomat:${{steps.vars.outputs.tag}} .
      - name: Push the tagged Docker image
        run: docker push openalcoholics/saufautomat:${{steps.vars.outputs.tag}}
  deploy:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    name: "Publish to k8s"
    runs-on: ubuntu-latest
    needs: build_push_docker
    steps:
      - uses: actions/checkout@v1
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_SHA})
      - name: get kube config
        uses: digitalocean/action-doctl@master
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show torbencarstens > $GITHUB_WORKSPACE/.kubeconfig
      - name: update tag in manifest.yml
        run: sed -i -e "s#{{TAG}}#:$(echo ${{steps.vars.outputs.tag}})#g" .kubernetes/manifest.yaml
      - name: apply config
        run: kubectl -n saufautomat-dev --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f .kubernetes/manifest.yaml
      - name: purge cloudflare cache
        run: curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" -H "Authorization:Bearer ${{ secrets.CF_API_TOKEN }}" -H "Content-Type:application/json" --data '{"purge_everything":true}'
